# Azure DevOps pipeline to validate and deploy an AWS CloudFormation template to Dev and Prod environments
trigger:
  branches:
    include:
      - main # Trigger pipeline only on push to main branch
pr: none # Disable PR triggers

pool:
  vmImage: 'ubuntu-latest'

variables:
  awsServiceConnection: 'aws-oidc-federation' # AWS service connection name
  awsRegion: 'us-east-1' # AWS region for deployment
  templatePath: '$(System.DefaultWorkingDirectory)/CloudfrontWithEc2.yaml' # Path to CloudFormation template
  devStackName: 'MyEC2CftStack-Dev' # Name of the CloudFormation stack for Dev
  prodStackName: 'MyEC2CftStack-Prod' # Name of the CloudFormation stack for Prod

jobs:
  - job: CI
    displayName: 'Validate Template'
    steps:
      - checkout: self
        displayName: 'Checkout Code'
      - task: AWSShellScript@1
        displayName: 'Validate CloudFormation Template'
        inputs:
          awsCredentials: '$(awsServiceConnection)'
          regionName: '$(awsRegion)'
          scriptType: 'inline'
          inlineScript: |
            aws cloudformation validate-template --template-body file://$(templatePath)

  - job: CD_Dev
    displayName: 'Deploy to AWS Dev'
    dependsOn: CI
    condition: succeeded() # Run only if CI succeeds
    steps:
      - checkout: self
        displayName: 'Checkout Code'
      - task: AWSShellScript@1
        displayName: 'Deploy CloudFormation Stack to Dev'
        inputs:
          awsCredentials: '$(awsServiceConnection)'
          regionName: '$(awsRegion)'
          scriptType: 'inline'
          inlineScript: |
            aws cloudformation deploy \
              --template-file $(templatePath) \
              --stack-name $(devStackName) \
              --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM

  - deployment: CD_Prod
    displayName: 'Deploy to AWS Prod'
    dependsOn: CD_Dev
    condition: succeeded() # Run only if CD_Dev succeeds
    environment: 'Prod' # References the Prod environment in Azure DevOps
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              displayName: 'Checkout Code'
            - task: AWSShellScript@1
              displayName: 'Deploy CloudFormation Stack to Prod'
              inputs:
                awsCredentials: '$(awsServiceConnection)'
                regionName: '$(awsRegion)'
                scriptType: 'inline'
                inlineScript: |
                  aws cloudformation deploy \
                    --template-file $(templatePath) \
                    --stack-name $(prodStackName) \
                    --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
