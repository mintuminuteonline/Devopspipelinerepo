AWSTemplateFormatVersion: 2010-09-09
Description: Creates a CloudFront distribution with an EC2 instance as the origin, including VPC, subnet, and security group

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: cloudfront-vpc

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: cloudfront-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1a  # Replace if needed
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: cloudfront-public-subnet

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: cloudfront-public-route-table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyRouteTable

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 to allow HTTP/HTTPS from CloudFront
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # CloudFront IPs (restrict if needed)
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Restrict to your IP for SSH
      Tags:
        - Key: Name
          Value: cloudfront-ec2-sg

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-05ffe3c48a9991133  # Amazon Linux 2 (us-east-1, replace if needed)
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      SubnetId: !Ref MyPublicSubnet
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hello from EC2 via CloudFront!</h1>" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: cloudfront-ec2-instance

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt MyEC2Instance.PublicDnsName
            Id: EC2Origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: EC2Origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
      Tags:
        - Key: Name
          Value: cloudfront-distribution

Outputs:
  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
  EC2InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref MyEC2Instance
  EC2PublicIp:
    Description: Public IP of the EC2 instance
    Value: !GetAtt MyEC2Instance.PublicIp
  VpcId:
    Description: ID of the created VPC
    Value: !Ref MyVPC
  SubnetId:
    Description: ID of the public subnet
    Value: !Ref MyPublicSubnet
  SecurityGroupId:
    Description: ID of the security group
    Value: !Ref WebSecurityGroup